# The Kafka broker location
kafka.bootstrap.servers=kafka:9092

quarkus.http.port=8082
# Configuring the outgoing channel (writing to Kafka)
mp.messaging.outgoing.json-out.connector=smallrye-kafka
mp.messaging.outgoing.json-out.topic=payload
mp.messaging.outgoing.json-out.key.serializer=org.apache.kafka.common.serialization.IntegerSerializer
mp.messaging.outgoing.json-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer


mp.messaging.incoming.json-in-output.connector=smallrye-kafka
mp.messaging.incoming.json-in-output.topic=outputPayload
mp.messaging.incoming.json-in-output.key.deserializer=org.apache.kafka.common.serialization.IntegerDeserializer
mp.messaging.incoming.json-in-output.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer




# OIDC Configuration
quarkus.oidc.auth-server-url=https://192.168.49.2:31559/realms/quarkus
quarkus.oidc.client-id=quarkus-client
quarkus.oidc.application-type=service
quarkus.oidc.tls.verification=none

# Enable Policy Enforcement
#quarkus.keycloak.policy-enforcer.enable=true

quarkus.http.auth.proactive=false

# Test config
quarkus.http.test-port=8099
quarkus.http.test-ssl-port=8446




# Allow all origins
quarkus.http.cors=true
quarkus.http.cors.origins=https://app.mapping-json.com
quarkus.http.cors.methods=GET,POST,PUT,DELETE,OPTIONS
quarkus.http.cors.headers=accept,authorization,content-type,x-requested-with
quarkus.http.cors.exposed-headers=Authorization
quarkus.http.cors.access-control-max-age=24H

# Allow credentials (optional, if your requests require cookies or authorization headers)
# Enhanced security logging
quarkus.log.category."io.quarkus.oidc".level=DEBUG
quarkus.log.category."io.quarkus.security".level=DEBUG
quarkus.log.category."io.quarkus.vertx.http".level=DEBUG